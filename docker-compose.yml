version: '3.7'

services:

  emit_time:
    deploy:
      replicas: 1
    network_mode: bridge
    extra_hosts:
      - "redis:172.18.0.1"
    image: codequants.com:5000/exchange-data:latest
    command: bash -c "source ~/.bashrc && python ./exchange_data/emitters/time_emitter.py"

  emit_bitmex:
    deploy:
      replicas: 1
    network_mode: bridge
    extra_hosts:
      - "redis:172.18.0.1"
    image: codequants.com:5000/exchange-data:latest
    command: bash -c "source ~/.bashrc && python ./exchange_data/emitters/bitmex/_bitmex_websocket_emitter.py XBTUSD"

  emit_orderbook_l2:
    deploy:
      replicas: 1
    network_mode: bridge
    extra_hosts:
      - "redis:172.18.0.1"
    image: codequants.com:5000/exchange-data:latest
    command: bash -c "source ~/.bashrc && python ./exchange_data/emitters/bitmex/_orderbook_l2_emitter.py XBTUSD"

  emit_bxbt_index:
    deploy:
      replicas: 1
    network_mode: bridge
    extra_hosts:
      - "redis:172.18.0.1"
      - "influxdb:172.18.0.1"
    image: codequants.com:5000/exchange-data:latest
    command: bash -c "source ~/.bashrc && python ./exchange_data/emitters/bitmex/_bxbt_index_emitter.py"
    env_file:
      - ./.env.prod

  emit_bitmex_orderbook:
    deploy:
      replicas: 1
    network_mode: bridge
    extra_hosts:
      - "redis:172.18.0.1"
      - "influxdb:172.18.0.1"
    image: codequants.com:5000/exchange-data:latest
    command: bash -c "source ~/.bashrc && python ./exchange_data/emitters/bitmex/_bitmex_orderbook_emitter.py XBTUSD"
    volumes:
      - $HOME/.exchange-data:/root/.exchange-data
    env_file:
      - ./.env.prod
    depends_on:
      - emit_bitmex
      - emit_time
#      - proxy

  socketio:
    image: codequants.com:5000/ws-server
    ports:
      - target: 8083
        mode: host
    environment:
#     - DEBUG=*
     - PORT=8083
#    volumes:
#      - ./ws_service/server/index.js:/usr/src/app/index.js
    depends_on:
      - redis
    deploy:
      endpoint_mode: dnsrr
      replicas: 0
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s

  proxy:
    deploy:
      replicas: 0
    image: codequants.com:5000/ws-haproxy
    depends_on:
      - socketio
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./ws_service/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 0.0.0.0:8081:80
    environment:
      BACKENDS: "socketio"


#secrets:
#  postgres_password:
#    file: ./secrets/postgres_password
